import{d as j,aa as u,r as d,b as C,au as O,o as s,c as n,l as f,w as A,a as r,V as h,F as y,k as I,A as L,f as P,as as R,dm as U,__tla as q}from"./index-e69fb82c.js";import{E as z,__tla as B}from"./el-image-f8ab6565.js";import{__tla as G}from"./el-image-viewer-3b74f14e.js";import{_ as H,__tla as J}from"./UploadImgs-0fffd5ba.js";import{c as K,__tla as M}from"./index-d2db4cdf.js";import{d as Q,__tla as S}from"./spu.data-ef198a59.js";import{u as T,__tla as W}from"./useMessage-ac7e9ad3.js";import{u as X,__tla as Y}from"./useCrudSchemas-d1dcbf4c.js";import{r as Z,__tla as $}from"./formRules-830e366d.js";let v,tt=Promise.all([(()=>{try{return q}catch{}})(),(()=>{try{return B}catch{}})(),(()=>{try{return G}catch{}})(),(()=>{try{return J}catch{}})(),(()=>{try{return M}catch{}})(),(()=>{try{return S}catch{}})(),(()=>{try{return W}catch{}})(),(()=>{try{return Y}catch{}})(),(()=>{try{return $}catch{}})()]).then(async()=>{let p;p={key:1},v=j({name:"DescriptionForm",__name:"DescriptionForm",props:{propFormData:{type:Object,default:()=>{}},activeName:u.string.def(""),isDetail:u.bool.def(!1)},emits:["update:activeName"],setup(i,{expose:D,emit:k}){const w=T();X(Q);const m=i,o=d(),t=d({description:[]}),F=C({description:[Z]});O(()=>m.propFormData,a=>{a&&(U(t,a),a.description.length&&(t.value.description=a.description.map(e=>({url:e}))))},{immediate:!0});const x=k;return D({validate:async()=>{if(o)return await r(o).validate(a=>{if(!a)throw w.warning("\u5546\u54C1\u8BE6\u60C5\u4E3A\u5B8C\u5584!!"),x("update:activeName","description"),new Error("\u5546\u54C1\u8BE6\u60C5\u4E3A\u5B8C\u5584!!");Object.assign(m.propFormData,t.value)})}}),(a,e)=>{const b=H,g=L,V=z;return s(),n(y,null,[i.isDetail?h("",!0):(s(),f(g,{key:0,ref_key:"descriptionFormRef",ref:o,model:r(t),rules:r(F),"label-width":"120px"},{default:A(()=>[P(b,{modelValue:r(t).description,"onUpdate:modelValue":e[0]||(e[0]=l=>r(t).description=l)},null,8,["modelValue"])]),_:1},8,["model","rules"])),i.isDetail?(s(),n("div",p,[(s(!0),n(y,null,I(r(t).description,(l,E)=>(s(),f(V,{key:E,src:l.url,class:"mr-10px h-60px w-60px",onClick:at=>(_=>{const c=[];R(_)?_.forEach(N=>{c.push(N)}):c.push(_),K({urlList:c})})(l.url)},null,8,["src","onClick"]))),128))])):h("",!0)],64)}}})});export{v as _,tt as __tla};
