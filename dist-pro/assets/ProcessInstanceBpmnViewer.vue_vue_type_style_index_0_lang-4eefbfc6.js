import{al as u,d,aa as t,r as i,j as y,p as f,o as I,l as b,w as o,D,f as g,ad as v,a as s,e as w,__tla as x}from"./index-c0a26e5e.js";import{E as h,__tla as k}from"./el-card-870e9bf2.js";import{j as B,__tla as P}from"./bpmn-embedded-618b549a.js";let p,j=Promise.all([(()=>{try{return x}catch{}})(),(()=>{try{return k}catch{}})(),(()=>{try{return P}catch{}})()]).then(async()=>{let e;e=w("span",{class:"el-icon-picture-outline"},"\u6D41\u7A0B\u56FE",-1),p=d({name:"BpmProcessInstanceBpmnViewer",__name:"ProcessInstanceBpmnViewer",props:{loading:t.bool,id:t.string,processInstance:t.any,tasks:t.array,bpmnXml:t.string},setup(a){const r=a,n=i({prefix:"flowable"}),c=i([]);return y(async()=>{r.id&&(c.value=await(async l=>await u.get({url:"/bpm/activity/list",params:l}))({processInstanceId:r.id}))}),(l,V)=>{const _=h,m=D;return f((I(),b(_,{class:"box-card"},{header:o(()=>[e]),default:o(()=>[g(s(B),v({key:"designer",activityData:s(c),prefix:s(n).prefix,processInstanceData:a.processInstance,taskData:a.tasks,value:a.bpmnXml},s(n)),null,16,["activityData","prefix","processInstanceData","taskData","value"])]),_:1})),[[m,a.loading]])}}})});export{p as _,j as __tla};
