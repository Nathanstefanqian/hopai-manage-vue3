import{d as I,aa as p,r as f,b as S,au as C,o as e,c as m,l as v,w as N,a as r,V as d,F as h,k as O,A,f as L,as as P,dm as R,__tla as U}from"./index-c0a26e5e.js";import{E as q,__tla as z}from"./el-image-bc627c23.js";import{__tla as B}from"./el-image-viewer-5eb59d31.js";import{_ as G,__tla as H}from"./UploadImgs-42305c92.js";import{s as J,__tla as K}from"./spu.data-04495b71.js";import{c as M,__tla as Q}from"./index-5f0d8cbf.js";import{u as T,__tla as W}from"./useMessage-3978ad3b.js";import{u as X,__tla as Y}from"./useCrudSchemas-8fc3336c.js";import{r as Z,__tla as $}from"./formRules-7031ffca.js";let y,aa=Promise.all([(()=>{try{return U}catch{}})(),(()=>{try{return z}catch{}})(),(()=>{try{return B}catch{}})(),(()=>{try{return H}catch{}})(),(()=>{try{return K}catch{}})(),(()=>{try{return Q}catch{}})(),(()=>{try{return W}catch{}})(),(()=>{try{return Y}catch{}})(),(()=>{try{return $}catch{}})()]).then(async()=>{let n;n={key:1},y=I({name:"ServiceInfoForm",__name:"ServiceInfoForm",props:{propFormData:{type:Object,default:()=>{}},activeName:p.string.def(""),isDetail:p.bool.def(!1)},emits:["update:activeName"],setup(o,{expose:k,emit:w}){const x=T();X(J);const u=o,_=f(),D=S({service:[Z]}),a=f({service:[]});C(()=>u.propFormData,t=>{t&&(R(a,t),t.service.length&&(a.value.service=t.service.map(s=>({url:s}))))},{immediate:!0});const F=w;return k({validate:async()=>{if(_)return await r(_).validate(t=>{if(!t)throw x.warning("\u670D\u52A1\u8BF4\u660E\u4E3A\u5B8C\u5584!!"),F("update:activeName","service"),new Error("\u670D\u52A1\u8BF4\u660E\u4E3A\u5B8C\u5584!!");Object.assign(u.propFormData,a.value)})}}),(t,s)=>{const b=G,g=A,V=q;return e(),m(h,null,[o.isDetail?d("",!0):(e(),v(g,{key:0,ref_key:"ServiceInfoRef",ref:_,model:r(a),rules:r(D),"label-width":"120px"},{default:N(()=>[L(b,{modelValue:r(a).service,"onUpdate:modelValue":s[0]||(s[0]=l=>r(a).service=l)},null,8,["modelValue"])]),_:1},8,["model","rules"])),o.isDetail?(e(),m("div",n,[(e(!0),m(h,null,O(r(a).service,(l,j)=>(e(),v(V,{key:j,src:l.url,class:"mr-10px h-60px w-60px",onClick:ta=>(c=>{const i=[];P(c)?c.forEach(E=>{i.push(E)}):i.push(c),M({urlList:i})})(l.url)},null,8,["src","onClick"]))),128))])):d("",!0)],64)}}})});export{y as _,aa as __tla};
